//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace wsPortfoliosItemPhase {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psPortfoliosItemPhaseSoap", Namespace="http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/")]
    public partial class psPortfoliosItemPhase : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPhasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhasesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDeliverablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddDeliverablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDeliverablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDeliverablesOperationCompleted;
        
        /// <remarks/>
        public psPortfoliosItemPhase() {
            this.Url = "http://localhost/ProSightWs/psPortfoliosItemPhase.asmx";
        }
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        public event GetAllPhasesCompletedEventHandler GetAllPhasesCompleted;
        
        /// <remarks/>
        public event UpdatePhasesCompletedEventHandler UpdatePhasesCompleted;
        
        /// <remarks/>
        public event GetAllDeliverablesCompletedEventHandler GetAllDeliverablesCompleted;
        
        /// <remarks/>
        public event AddDeliverablesCompletedEventHandler AddDeliverablesCompleted;
        
        /// <remarks/>
        public event UpdateDeliverablesCompletedEventHandler UpdateDeliverablesCompleted;
        
        /// <remarks/>
        public event DeleteDeliverablesCompletedEventHandler DeleteDeliverablesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/Debug", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psRETURN_VALUES Debug() {
            object[] results = this.Invoke("Debug", new object[0]);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebug(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Debug", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public psRETURN_VALUES EndDebug(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public void DebugAsync() {
            this.DebugAsync(null);
        }
        
        /// <remarks/>
        public void DebugAsync(object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[0], this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new DebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/GetAllPhases", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosItemPhaseInfo[] GetAllPhases(string sCommonIDCategory, string sId) {
            object[] results = this.Invoke("GetAllPhases", new object[] {
                        sCommonIDCategory,
                        sId});
            return ((psPortfoliosItemPhaseInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllPhases(string sCommonIDCategory, string sId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllPhases", new object[] {
                        sCommonIDCategory,
                        sId}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosItemPhaseInfo[] EndGetAllPhases(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosItemPhaseInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPhasesAsync(string sCommonIDCategory, string sId) {
            this.GetAllPhasesAsync(sCommonIDCategory, sId, null);
        }
        
        /// <remarks/>
        public void GetAllPhasesAsync(string sCommonIDCategory, string sId, object userState) {
            if ((this.GetAllPhasesOperationCompleted == null)) {
                this.GetAllPhasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPhasesOperationCompleted);
            }
            this.InvokeAsync("GetAllPhases", new object[] {
                        sCommonIDCategory,
                        sId}, this.GetAllPhasesOperationCompleted, userState);
        }
        
        private void OnGetAllPhasesOperationCompleted(object arg) {
            if ((this.GetAllPhasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPhasesCompleted(this, new GetAllPhasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/UpdatePhases", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdatePhases(string sCommonIDCategory, string sId, psPortfoliosItemPhaseInfo[] arItemPhaseValues) {
            this.Invoke("UpdatePhases", new object[] {
                        sCommonIDCategory,
                        sId,
                        arItemPhaseValues});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdatePhases(string sCommonIDCategory, string sId, psPortfoliosItemPhaseInfo[] arItemPhaseValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdatePhases", new object[] {
                        sCommonIDCategory,
                        sId,
                        arItemPhaseValues}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdatePhases(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdatePhasesAsync(string sCommonIDCategory, string sId, psPortfoliosItemPhaseInfo[] arItemPhaseValues) {
            this.UpdatePhasesAsync(sCommonIDCategory, sId, arItemPhaseValues, null);
        }
        
        /// <remarks/>
        public void UpdatePhasesAsync(string sCommonIDCategory, string sId, psPortfoliosItemPhaseInfo[] arItemPhaseValues, object userState) {
            if ((this.UpdatePhasesOperationCompleted == null)) {
                this.UpdatePhasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhasesOperationCompleted);
            }
            this.InvokeAsync("UpdatePhases", new object[] {
                        sCommonIDCategory,
                        sId,
                        arItemPhaseValues}, this.UpdatePhasesOperationCompleted, userState);
        }
        
        private void OnUpdatePhasesOperationCompleted(object arg) {
            if ((this.UpdatePhasesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhasesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/GetAllDeliverables", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosDeliverableInfo[] GetAllDeliverables(string sCommonIDCategory, string sId) {
            object[] results = this.Invoke("GetAllDeliverables", new object[] {
                        sCommonIDCategory,
                        sId});
            return ((psPortfoliosDeliverableInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllDeliverables(string sCommonIDCategory, string sId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAllDeliverables", new object[] {
                        sCommonIDCategory,
                        sId}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosDeliverableInfo[] EndGetAllDeliverables(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosDeliverableInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDeliverablesAsync(string sCommonIDCategory, string sId) {
            this.GetAllDeliverablesAsync(sCommonIDCategory, sId, null);
        }
        
        /// <remarks/>
        public void GetAllDeliverablesAsync(string sCommonIDCategory, string sId, object userState) {
            if ((this.GetAllDeliverablesOperationCompleted == null)) {
                this.GetAllDeliverablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDeliverablesOperationCompleted);
            }
            this.InvokeAsync("GetAllDeliverables", new object[] {
                        sCommonIDCategory,
                        sId}, this.GetAllDeliverablesOperationCompleted, userState);
        }
        
        private void OnGetAllDeliverablesOperationCompleted(object arg) {
            if ((this.GetAllDeliverablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDeliverablesCompleted(this, new GetAllDeliverablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/AddDeliverables", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.Invoke("AddDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddDeliverables(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.AddDeliverablesAsync(sCommonIDCategory, sId, arDeliverables, null);
        }
        
        /// <remarks/>
        public void AddDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, object userState) {
            if ((this.AddDeliverablesOperationCompleted == null)) {
                this.AddDeliverablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddDeliverablesOperationCompleted);
            }
            this.InvokeAsync("AddDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, this.AddDeliverablesOperationCompleted, userState);
        }
        
        private void OnAddDeliverablesOperationCompleted(object arg) {
            if ((this.AddDeliverablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddDeliverablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/UpdateDeliverables", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.Invoke("UpdateDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateDeliverables(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.UpdateDeliverablesAsync(sCommonIDCategory, sId, arDeliverables, null);
        }
        
        /// <remarks/>
        public void UpdateDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, object userState) {
            if ((this.UpdateDeliverablesOperationCompleted == null)) {
                this.UpdateDeliverablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDeliverablesOperationCompleted);
            }
            this.InvokeAsync("UpdateDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, this.UpdateDeliverablesOperationCompleted, userState);
        }
        
        private void OnUpdateDeliverablesOperationCompleted(object arg) {
            if ((this.UpdateDeliverablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDeliverablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosItemPhase/DeleteDeliverables", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.Invoke("DeleteDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDeliverables(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteDeliverables(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables) {
            this.DeleteDeliverablesAsync(sCommonIDCategory, sId, arDeliverables, null);
        }
        
        /// <remarks/>
        public void DeleteDeliverablesAsync(string sCommonIDCategory, string sId, psPortfoliosDeliverableInfo[] arDeliverables, object userState) {
            if ((this.DeleteDeliverablesOperationCompleted == null)) {
                this.DeleteDeliverablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDeliverablesOperationCompleted);
            }
            this.InvokeAsync("DeleteDeliverables", new object[] {
                        sCommonIDCategory,
                        sId,
                        arDeliverables}, this.DeleteDeliverablesOperationCompleted, userState);
        }
        
        private void OnDeleteDeliverablesOperationCompleted(object arg) {
            if ((this.DeleteDeliverablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDeliverablesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase")]
    public enum psRETURN_VALUES {
        
        /// <remarks/>
        ERR_OK,
        
        /// <remarks/>
        ERR_INTERNAL,
        
        /// <remarks/>
        ERR_COMMON_ID_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_COMMON_ID_UNKNOWN,
        
        /// <remarks/>
        ERR_MULTIPLE_COMMON_ID,
        
        /// <remarks/>
        ERR_NOT_ITEM,
        
        /// <remarks/>
        ERR_NO_NAME_GIVEN,
        
        /// <remarks/>
        ERR_PORTFOLIO_UNKNOWN,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_QBP,
        
        /// <remarks/>
        ERR_NAME_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_NOT_PORTFOLIO,
        
        /// <remarks/>
        ERR_PORTFOLIO_TYPE_MISMATCH,
        
        /// <remarks/>
        ERR_PHASE_NOT_FOUND,
        
        /// <remarks/>
        ERR_NO_SUCH_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_NO_COMMON_ID,
        
        /// <remarks/>
        ERR_ILLEGAL_STATUS,
        
        /// <remarks/>
        ERR_ILLEGAL_PORTFOLIO_TYPE,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_NOT_FOUND,
        
        /// <remarks/>
        ERR_ILLEGAL_GUID,
        
        /// <remarks/>
        ERR_NO_PHASES_FOR_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_ILLEGAL_DATE,
        
        /// <remarks/>
        ERR_ILLEGAL_DESCRIPTION,
        
        /// <remarks/>
        ERR_ITEM_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_NO_VALUE_LIST_NAME,
        
        /// <remarks/>
        ERR_VALUE_LIST_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_CANNOT_UPDATE_SYSTEM_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_TEXT_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_ID_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_VALUE_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_VALUE_ID_NOT_INTEGER,
        
        /// <remarks/>
        ERR_ILLEGAL_NAME,
        
        /// <remarks/>
        ERR_CATEGORY_NOT_SUPPORTED,
        
        /// <remarks/>
        ERR_CATEGORY_UNKNOWN,
        
        /// <remarks/>
        ERR_ILLEGAL_OPERATOR,
        
        /// <remarks/>
        ERR_VALUE_NOT_INTEGER,
        
        /// <remarks/>
        ERR_VALUE_NOT_NUMERIC,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_IN_SCOPE,
        
        /// <remarks/>
        ERR_ILLEGAL_INDICATOR,
        
        /// <remarks/>
        ERR_BAD_PARAMETER,
        
        /// <remarks/>
        ERR_ILLEGAL_DEPENDENCY,
        
        /// <remarks/>
        ERR_ADD_NEW_NEVER_CALLED,
        
        /// <remarks/>
        ERR_SECURITY_NOT_SET,
        
        /// <remarks/>
        ERR_SECURITY_VIOLATION,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_IN_PORTFOLIO,
        
        /// <remarks/>
        ERR_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_NO_DELETE_PERMISSION,
        
        /// <remarks/>
        ERR_NO_EDIT_PERMISSION_ON_PARENT,
        
        /// <remarks/>
        ERR_NO_FURTHER_DETAILS_AVAILABLE,
        
        /// <remarks/>
        ERR_DUPLICATE_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_PHASE_ACTUAL_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_PHASE_PLANED_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_MORE_THAN_ONE_CURRENT_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_MENU_XML_DOES_NOT_CONFORM_TO_XSD,
        
        /// <remarks/>
        ERR_SETTINGS_DO_NOT_EXIST,
        
        /// <remarks/>
        ERR_SETTINGS_ALREADY_EXIST,
        
        /// <remarks/>
        ERR_OBJECT_IN_USE,
        
        /// <remarks/>
        ERR_EXCEEDED_AUTHORIZED_NUMBER_OF_USERS,
        
        /// <remarks/>
        ERR_PHASE_FRCST_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_SPECIFIC_EMAIL_ALERT_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_XML_EXPORT_TEMPLATE_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_VALIDATION_ERROR,
        
        /// <remarks/>
        ERR_VERSION_NAME_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_ATTACHMENT_UNKNOWN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase")]
    public partial class psPortfoliosItemPhaseInfo {
        
        private string nameField;
        
        private string start_Date_PlanField;
        
        private string end_Date_PlanField;
        
        private string start_Date_ActField;
        
        private string end_Date_ActField;
        
        private float part_CompleteField;
        
        private psINDICATOR healthField;
        
        private psPHASE_STATUS statusField;
        
        private string annotationField;
        
        private string start_Date_FrcstField;
        
        private string end_Date_FrcstField;
        
        public psPortfoliosItemPhaseInfo() {
            this.part_CompleteField = ((float)(-1E+38F));
            this.healthField = psINDICATOR.NOT_SPECIFIED;
            this.statusField = psPHASE_STATUS.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Start_Date_Plan {
            get {
                return this.start_Date_PlanField;
            }
            set {
                this.start_Date_PlanField = value;
            }
        }
        
        /// <remarks/>
        public string End_Date_Plan {
            get {
                return this.end_Date_PlanField;
            }
            set {
                this.end_Date_PlanField = value;
            }
        }
        
        /// <remarks/>
        public string Start_Date_Act {
            get {
                return this.start_Date_ActField;
            }
            set {
                this.start_Date_ActField = value;
            }
        }
        
        /// <remarks/>
        public string End_Date_Act {
            get {
                return this.end_Date_ActField;
            }
            set {
                this.end_Date_ActField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(typeof(float), "-1E+38")]
        public float Part_Complete {
            get {
                return this.part_CompleteField;
            }
            set {
                this.part_CompleteField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psINDICATOR.NOT_SPECIFIED)]
        public psINDICATOR Health {
            get {
                return this.healthField;
            }
            set {
                this.healthField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psPHASE_STATUS.NOT_SPECIFIED)]
        public psPHASE_STATUS Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Annotation {
            get {
                return this.annotationField;
            }
            set {
                this.annotationField = value;
            }
        }
        
        /// <remarks/>
        public string Start_Date_Frcst {
            get {
                return this.start_Date_FrcstField;
            }
            set {
                this.start_Date_FrcstField = value;
            }
        }
        
        /// <remarks/>
        public string End_Date_Frcst {
            get {
                return this.end_Date_FrcstField;
            }
            set {
                this.end_Date_FrcstField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase")]
    public enum psINDICATOR {
        
        /// <remarks/>
        IND_NONE,
        
        /// <remarks/>
        IND_RED,
        
        /// <remarks/>
        IND_YELLOW,
        
        /// <remarks/>
        IND_GREEN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase")]
    public enum psPHASE_STATUS {
        
        /// <remarks/>
        PHSTS_NONE,
        
        /// <remarks/>
        PHSTS_NOT_STARTED,
        
        /// <remarks/>
        PHSTS_CURRENT_PHASE,
        
        /// <remarks/>
        PHSTS_FINISHED,
        
        /// <remarks/>
        PHSTS_SKIPPED,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosItemPhase")]
    public partial class psPortfoliosDeliverableInfo {
        
        private string phaseNameField;
        
        private string nameField;
        
        private string descriptionField;
        
        private bool mandatoryField;
        
        private bool completedField;
        
        private string ownerField;
        
        private int ownerIDField;
        
        private string approvedByField;
        
        private int approvedByIDField;
        
        private string completionDateField;
        
        public psPortfoliosDeliverableInfo() {
            this.ownerIDField = -2;
            this.approvedByIDField = -2;
        }
        
        /// <remarks/>
        public string PhaseName {
            get {
                return this.phaseNameField;
            }
            set {
                this.phaseNameField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Mandatory {
            get {
                return this.mandatoryField;
            }
            set {
                this.mandatoryField = value;
            }
        }
        
        /// <remarks/>
        public bool Completed {
            get {
                return this.completedField;
            }
            set {
                this.completedField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int OwnerID {
            get {
                return this.ownerIDField;
            }
            set {
                this.ownerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ApprovedBy {
            get {
                return this.approvedByField;
            }
            set {
                this.approvedByField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int ApprovedByID {
            get {
                return this.approvedByIDField;
            }
            set {
                this.approvedByIDField = value;
            }
        }
        
        /// <remarks/>
        public string CompletionDate {
            get {
                return this.completionDateField;
            }
            set {
                this.completionDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DebugCompletedEventHandler(object sender, DebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psRETURN_VALUES Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psRETURN_VALUES)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetAllPhasesCompletedEventHandler(object sender, GetAllPhasesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPhasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPhasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosItemPhaseInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosItemPhaseInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void UpdatePhasesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetAllDeliverablesCompletedEventHandler(object sender, GetAllDeliverablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDeliverablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDeliverablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosDeliverableInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosDeliverableInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void AddDeliverablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void UpdateDeliverablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DeleteDeliverablesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
