//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace wsPortfoliosWorkflow {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psPortfoliosWorkflowSoap", Namespace="http://prosight.com/wsdl/5.0/psPortfoliosWorkflow/")]
    public partial class psPortfoliosWorkflow : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback StopWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArchiveWFInstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListWFInstancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListWFInstanceAssignmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListWFAssignmentsByPerformerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListWFAssignmentsByManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWFTemplateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListWFTemplatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SignoffWFAssignmentOperationCompleted;
        
        /// <remarks/>
        public psPortfoliosWorkflow() {
            this.Url = "http://localhost/ProSightWs/psPortfoliosWorkflow.asmx";
        }
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        public event StartWorkflowCompletedEventHandler StartWorkflowCompleted;
        
        /// <remarks/>
        public event StopWFInstanceCompletedEventHandler StopWFInstanceCompleted;
        
        /// <remarks/>
        public event DeleteWFInstanceCompletedEventHandler DeleteWFInstanceCompleted;
        
        /// <remarks/>
        public event ArchiveWFInstanceCompletedEventHandler ArchiveWFInstanceCompleted;
        
        /// <remarks/>
        public event ListWFInstancesCompletedEventHandler ListWFInstancesCompleted;
        
        /// <remarks/>
        public event ListWFInstanceAssignmentsCompletedEventHandler ListWFInstanceAssignmentsCompleted;
        
        /// <remarks/>
        public event ListWFAssignmentsByPerformerCompletedEventHandler ListWFAssignmentsByPerformerCompleted;
        
        /// <remarks/>
        public event ListWFAssignmentsByManagerCompletedEventHandler ListWFAssignmentsByManagerCompleted;
        
        /// <remarks/>
        public event GetWFTemplateInfoCompletedEventHandler GetWFTemplateInfoCompleted;
        
        /// <remarks/>
        public event ListWFTemplatesCompletedEventHandler ListWFTemplatesCompleted;
        
        /// <remarks/>
        public event SignoffWFAssignmentCompletedEventHandler SignoffWFAssignmentCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/Debug", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psRETURN_VALUES Debug() {
            object[] results = this.Invoke("Debug", new object[0]);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebug(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Debug", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public psRETURN_VALUES EndDebug(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public void DebugAsync() {
            this.DebugAsync(null);
        }
        
        /// <remarks/>
        public void DebugAsync(object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[0], this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new DebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/StartWorkflow", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int StartWorkflow(string sCommonIDCategory, string sTemplateName, string sInstanceName, psPortfoliosPortfolioIdentifier oScope, string sFromStepName, psPortfoliosWFParticipantInfo oManager, psPortfoliosWFParticipantInfo oRunAsUser, bool bCanAccessAllData) {
            object[] results = this.Invoke("StartWorkflow", new object[] {
                        sCommonIDCategory,
                        sTemplateName,
                        sInstanceName,
                        oScope,
                        sFromStepName,
                        oManager,
                        oRunAsUser,
                        bCanAccessAllData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStartWorkflow(string sCommonIDCategory, string sTemplateName, string sInstanceName, psPortfoliosPortfolioIdentifier oScope, string sFromStepName, psPortfoliosWFParticipantInfo oManager, psPortfoliosWFParticipantInfo oRunAsUser, bool bCanAccessAllData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartWorkflow", new object[] {
                        sCommonIDCategory,
                        sTemplateName,
                        sInstanceName,
                        oScope,
                        sFromStepName,
                        oManager,
                        oRunAsUser,
                        bCanAccessAllData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndStartWorkflow(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StartWorkflowAsync(string sCommonIDCategory, string sTemplateName, string sInstanceName, psPortfoliosPortfolioIdentifier oScope, string sFromStepName, psPortfoliosWFParticipantInfo oManager, psPortfoliosWFParticipantInfo oRunAsUser, bool bCanAccessAllData) {
            this.StartWorkflowAsync(sCommonIDCategory, sTemplateName, sInstanceName, oScope, sFromStepName, oManager, oRunAsUser, bCanAccessAllData, null);
        }
        
        /// <remarks/>
        public void StartWorkflowAsync(string sCommonIDCategory, string sTemplateName, string sInstanceName, psPortfoliosPortfolioIdentifier oScope, string sFromStepName, psPortfoliosWFParticipantInfo oManager, psPortfoliosWFParticipantInfo oRunAsUser, bool bCanAccessAllData, object userState) {
            if ((this.StartWorkflowOperationCompleted == null)) {
                this.StartWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartWorkflowOperationCompleted);
            }
            this.InvokeAsync("StartWorkflow", new object[] {
                        sCommonIDCategory,
                        sTemplateName,
                        sInstanceName,
                        oScope,
                        sFromStepName,
                        oManager,
                        oRunAsUser,
                        bCanAccessAllData}, this.StartWorkflowOperationCompleted, userState);
        }
        
        private void OnStartWorkflowOperationCompleted(object arg) {
            if ((this.StartWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartWorkflowCompleted(this, new StartWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/StopWFInstance", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StopWFInstance(int lWorkflowInstanceId) {
            this.Invoke("StopWFInstance", new object[] {
                        lWorkflowInstanceId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStopWFInstance(int lWorkflowInstanceId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StopWFInstance", new object[] {
                        lWorkflowInstanceId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndStopWFInstance(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void StopWFInstanceAsync(int lWorkflowInstanceId) {
            this.StopWFInstanceAsync(lWorkflowInstanceId, null);
        }
        
        /// <remarks/>
        public void StopWFInstanceAsync(int lWorkflowInstanceId, object userState) {
            if ((this.StopWFInstanceOperationCompleted == null)) {
                this.StopWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStopWFInstanceOperationCompleted);
            }
            this.InvokeAsync("StopWFInstance", new object[] {
                        lWorkflowInstanceId}, this.StopWFInstanceOperationCompleted, userState);
        }
        
        private void OnStopWFInstanceOperationCompleted(object arg) {
            if ((this.StopWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StopWFInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/DeleteWFInstance", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteWFInstance(int lWorkflowInstanceId) {
            this.Invoke("DeleteWFInstance", new object[] {
                        lWorkflowInstanceId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteWFInstance(int lWorkflowInstanceId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteWFInstance", new object[] {
                        lWorkflowInstanceId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteWFInstance(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteWFInstanceAsync(int lWorkflowInstanceId) {
            this.DeleteWFInstanceAsync(lWorkflowInstanceId, null);
        }
        
        /// <remarks/>
        public void DeleteWFInstanceAsync(int lWorkflowInstanceId, object userState) {
            if ((this.DeleteWFInstanceOperationCompleted == null)) {
                this.DeleteWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWFInstanceOperationCompleted);
            }
            this.InvokeAsync("DeleteWFInstance", new object[] {
                        lWorkflowInstanceId}, this.DeleteWFInstanceOperationCompleted, userState);
        }
        
        private void OnDeleteWFInstanceOperationCompleted(object arg) {
            if ((this.DeleteWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWFInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ArchiveWFInstance", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ArchiveWFInstance(int lWorkflowInstanceId) {
            this.Invoke("ArchiveWFInstance", new object[] {
                        lWorkflowInstanceId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginArchiveWFInstance(int lWorkflowInstanceId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ArchiveWFInstance", new object[] {
                        lWorkflowInstanceId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndArchiveWFInstance(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ArchiveWFInstanceAsync(int lWorkflowInstanceId) {
            this.ArchiveWFInstanceAsync(lWorkflowInstanceId, null);
        }
        
        /// <remarks/>
        public void ArchiveWFInstanceAsync(int lWorkflowInstanceId, object userState) {
            if ((this.ArchiveWFInstanceOperationCompleted == null)) {
                this.ArchiveWFInstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArchiveWFInstanceOperationCompleted);
            }
            this.InvokeAsync("ArchiveWFInstance", new object[] {
                        lWorkflowInstanceId}, this.ArchiveWFInstanceOperationCompleted, userState);
        }
        
        private void OnArchiveWFInstanceOperationCompleted(object arg) {
            if ((this.ArchiveWFInstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArchiveWFInstanceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ListWFInstances", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFInstanceInfo[] ListWFInstances(string sCommonIDCategory, bool bShowArchived) {
            object[] results = this.Invoke("ListWFInstances", new object[] {
                        sCommonIDCategory,
                        bShowArchived});
            return ((psPortfoliosWFInstanceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListWFInstances(string sCommonIDCategory, bool bShowArchived, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListWFInstances", new object[] {
                        sCommonIDCategory,
                        bShowArchived}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFInstanceInfo[] EndListWFInstances(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFInstanceInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListWFInstancesAsync(string sCommonIDCategory, bool bShowArchived) {
            this.ListWFInstancesAsync(sCommonIDCategory, bShowArchived, null);
        }
        
        /// <remarks/>
        public void ListWFInstancesAsync(string sCommonIDCategory, bool bShowArchived, object userState) {
            if ((this.ListWFInstancesOperationCompleted == null)) {
                this.ListWFInstancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListWFInstancesOperationCompleted);
            }
            this.InvokeAsync("ListWFInstances", new object[] {
                        sCommonIDCategory,
                        bShowArchived}, this.ListWFInstancesOperationCompleted, userState);
        }
        
        private void OnListWFInstancesOperationCompleted(object arg) {
            if ((this.ListWFInstancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListWFInstancesCompleted(this, new ListWFInstancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ListWFInstanceAssign" +
            "ments", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFAssignmentInfo[] ListWFInstanceAssignments(string sCommonIDCategory, int WFInstanceID) {
            object[] results = this.Invoke("ListWFInstanceAssignments", new object[] {
                        sCommonIDCategory,
                        WFInstanceID});
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListWFInstanceAssignments(string sCommonIDCategory, int WFInstanceID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListWFInstanceAssignments", new object[] {
                        sCommonIDCategory,
                        WFInstanceID}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] EndListWFInstanceAssignments(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListWFInstanceAssignmentsAsync(string sCommonIDCategory, int WFInstanceID) {
            this.ListWFInstanceAssignmentsAsync(sCommonIDCategory, WFInstanceID, null);
        }
        
        /// <remarks/>
        public void ListWFInstanceAssignmentsAsync(string sCommonIDCategory, int WFInstanceID, object userState) {
            if ((this.ListWFInstanceAssignmentsOperationCompleted == null)) {
                this.ListWFInstanceAssignmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListWFInstanceAssignmentsOperationCompleted);
            }
            this.InvokeAsync("ListWFInstanceAssignments", new object[] {
                        sCommonIDCategory,
                        WFInstanceID}, this.ListWFInstanceAssignmentsOperationCompleted, userState);
        }
        
        private void OnListWFInstanceAssignmentsOperationCompleted(object arg) {
            if ((this.ListWFInstanceAssignmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListWFInstanceAssignmentsCompleted(this, new ListWFInstanceAssignmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ListWFAssignmentsByP" +
            "erformer", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFAssignmentInfo[] ListWFAssignmentsByPerformer(string sCommonIDCategory, string sPerformer, int lPerformerId) {
            object[] results = this.Invoke("ListWFAssignmentsByPerformer", new object[] {
                        sCommonIDCategory,
                        sPerformer,
                        lPerformerId});
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListWFAssignmentsByPerformer(string sCommonIDCategory, string sPerformer, int lPerformerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListWFAssignmentsByPerformer", new object[] {
                        sCommonIDCategory,
                        sPerformer,
                        lPerformerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] EndListWFAssignmentsByPerformer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListWFAssignmentsByPerformerAsync(string sCommonIDCategory, string sPerformer, int lPerformerId) {
            this.ListWFAssignmentsByPerformerAsync(sCommonIDCategory, sPerformer, lPerformerId, null);
        }
        
        /// <remarks/>
        public void ListWFAssignmentsByPerformerAsync(string sCommonIDCategory, string sPerformer, int lPerformerId, object userState) {
            if ((this.ListWFAssignmentsByPerformerOperationCompleted == null)) {
                this.ListWFAssignmentsByPerformerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListWFAssignmentsByPerformerOperationCompleted);
            }
            this.InvokeAsync("ListWFAssignmentsByPerformer", new object[] {
                        sCommonIDCategory,
                        sPerformer,
                        lPerformerId}, this.ListWFAssignmentsByPerformerOperationCompleted, userState);
        }
        
        private void OnListWFAssignmentsByPerformerOperationCompleted(object arg) {
            if ((this.ListWFAssignmentsByPerformerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListWFAssignmentsByPerformerCompleted(this, new ListWFAssignmentsByPerformerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ListWFAssignmentsByM" +
            "anager", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFAssignmentInfo[] ListWFAssignmentsByManager(string sCommonIDCategory, string sManager, int lManagerId) {
            object[] results = this.Invoke("ListWFAssignmentsByManager", new object[] {
                        sCommonIDCategory,
                        sManager,
                        lManagerId});
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListWFAssignmentsByManager(string sCommonIDCategory, string sManager, int lManagerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListWFAssignmentsByManager", new object[] {
                        sCommonIDCategory,
                        sManager,
                        lManagerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] EndListWFAssignmentsByManager(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFAssignmentInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListWFAssignmentsByManagerAsync(string sCommonIDCategory, string sManager, int lManagerId) {
            this.ListWFAssignmentsByManagerAsync(sCommonIDCategory, sManager, lManagerId, null);
        }
        
        /// <remarks/>
        public void ListWFAssignmentsByManagerAsync(string sCommonIDCategory, string sManager, int lManagerId, object userState) {
            if ((this.ListWFAssignmentsByManagerOperationCompleted == null)) {
                this.ListWFAssignmentsByManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListWFAssignmentsByManagerOperationCompleted);
            }
            this.InvokeAsync("ListWFAssignmentsByManager", new object[] {
                        sCommonIDCategory,
                        sManager,
                        lManagerId}, this.ListWFAssignmentsByManagerOperationCompleted, userState);
        }
        
        private void OnListWFAssignmentsByManagerOperationCompleted(object arg) {
            if ((this.ListWFAssignmentsByManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListWFAssignmentsByManagerCompleted(this, new ListWFAssignmentsByManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/GetWFTemplateInfo", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFTemplateInfo GetWFTemplateInfo(string sCommonIDCategory, string sWFTemplateName) {
            object[] results = this.Invoke("GetWFTemplateInfo", new object[] {
                        sCommonIDCategory,
                        sWFTemplateName});
            return ((psPortfoliosWFTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWFTemplateInfo(string sCommonIDCategory, string sWFTemplateName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWFTemplateInfo", new object[] {
                        sCommonIDCategory,
                        sWFTemplateName}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFTemplateInfo EndGetWFTemplateInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFTemplateInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetWFTemplateInfoAsync(string sCommonIDCategory, string sWFTemplateName) {
            this.GetWFTemplateInfoAsync(sCommonIDCategory, sWFTemplateName, null);
        }
        
        /// <remarks/>
        public void GetWFTemplateInfoAsync(string sCommonIDCategory, string sWFTemplateName, object userState) {
            if ((this.GetWFTemplateInfoOperationCompleted == null)) {
                this.GetWFTemplateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWFTemplateInfoOperationCompleted);
            }
            this.InvokeAsync("GetWFTemplateInfo", new object[] {
                        sCommonIDCategory,
                        sWFTemplateName}, this.GetWFTemplateInfoOperationCompleted, userState);
        }
        
        private void OnGetWFTemplateInfoOperationCompleted(object arg) {
            if ((this.GetWFTemplateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWFTemplateInfoCompleted(this, new GetWFTemplateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/ListWFTemplates", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosWFTemplateInfo[] ListWFTemplates(string sCommonIDCategory) {
            object[] results = this.Invoke("ListWFTemplates", new object[] {
                        sCommonIDCategory});
            return ((psPortfoliosWFTemplateInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListWFTemplates(string sCommonIDCategory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListWFTemplates", new object[] {
                        sCommonIDCategory}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosWFTemplateInfo[] EndListWFTemplates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosWFTemplateInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void ListWFTemplatesAsync(string sCommonIDCategory) {
            this.ListWFTemplatesAsync(sCommonIDCategory, null);
        }
        
        /// <remarks/>
        public void ListWFTemplatesAsync(string sCommonIDCategory, object userState) {
            if ((this.ListWFTemplatesOperationCompleted == null)) {
                this.ListWFTemplatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListWFTemplatesOperationCompleted);
            }
            this.InvokeAsync("ListWFTemplates", new object[] {
                        sCommonIDCategory}, this.ListWFTemplatesOperationCompleted, userState);
        }
        
        private void OnListWFTemplatesOperationCompleted(object arg) {
            if ((this.ListWFTemplatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListWFTemplatesCompleted(this, new ListWFTemplatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/Portfolios/4.0/psPortfoliosWorkflow/SignoffWFAssignment", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SignoffWFAssignment(int lAssignmentId, string sChoice) {
            this.Invoke("SignoffWFAssignment", new object[] {
                        lAssignmentId,
                        sChoice});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSignoffWFAssignment(int lAssignmentId, string sChoice, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SignoffWFAssignment", new object[] {
                        lAssignmentId,
                        sChoice}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSignoffWFAssignment(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SignoffWFAssignmentAsync(int lAssignmentId, string sChoice) {
            this.SignoffWFAssignmentAsync(lAssignmentId, sChoice, null);
        }
        
        /// <remarks/>
        public void SignoffWFAssignmentAsync(int lAssignmentId, string sChoice, object userState) {
            if ((this.SignoffWFAssignmentOperationCompleted == null)) {
                this.SignoffWFAssignmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSignoffWFAssignmentOperationCompleted);
            }
            this.InvokeAsync("SignoffWFAssignment", new object[] {
                        lAssignmentId,
                        sChoice}, this.SignoffWFAssignmentOperationCompleted, userState);
        }
        
        private void OnSignoffWFAssignmentOperationCompleted(object arg) {
            if ((this.SignoffWFAssignmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SignoffWFAssignmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psRETURN_VALUES {
        
        /// <remarks/>
        ERR_OK,
        
        /// <remarks/>
        ERR_INTERNAL,
        
        /// <remarks/>
        ERR_COMMON_ID_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_COMMON_ID_UNKNOWN,
        
        /// <remarks/>
        ERR_MULTIPLE_COMMON_ID,
        
        /// <remarks/>
        ERR_NOT_ITEM,
        
        /// <remarks/>
        ERR_NO_NAME_GIVEN,
        
        /// <remarks/>
        ERR_PORTFOLIO_UNKNOWN,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_QBP,
        
        /// <remarks/>
        ERR_NAME_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_NOT_PORTFOLIO,
        
        /// <remarks/>
        ERR_PORTFOLIO_TYPE_MISMATCH,
        
        /// <remarks/>
        ERR_PHASE_NOT_FOUND,
        
        /// <remarks/>
        ERR_NO_SUCH_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_NO_COMMON_ID,
        
        /// <remarks/>
        ERR_ILLEGAL_STATUS,
        
        /// <remarks/>
        ERR_ILLEGAL_PORTFOLIO_TYPE,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_NOT_FOUND,
        
        /// <remarks/>
        ERR_ILLEGAL_GUID,
        
        /// <remarks/>
        ERR_NO_PHASES_FOR_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_ILLEGAL_DATE,
        
        /// <remarks/>
        ERR_ILLEGAL_DESCRIPTION,
        
        /// <remarks/>
        ERR_ITEM_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_NO_VALUE_LIST_NAME,
        
        /// <remarks/>
        ERR_VALUE_LIST_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_CANNOT_UPDATE_SYSTEM_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_TEXT_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_ID_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_VALUE_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_VALUE_ID_NOT_INTEGER,
        
        /// <remarks/>
        ERR_ILLEGAL_NAME,
        
        /// <remarks/>
        ERR_CATEGORY_NOT_SUPPORTED,
        
        /// <remarks/>
        ERR_CATEGORY_UNKNOWN,
        
        /// <remarks/>
        ERR_ILLEGAL_OPERATOR,
        
        /// <remarks/>
        ERR_VALUE_NOT_INTEGER,
        
        /// <remarks/>
        ERR_VALUE_NOT_NUMERIC,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_IN_SCOPE,
        
        /// <remarks/>
        ERR_ILLEGAL_INDICATOR,
        
        /// <remarks/>
        ERR_BAD_PARAMETER,
        
        /// <remarks/>
        ERR_ILLEGAL_DEPENDENCY,
        
        /// <remarks/>
        ERR_ADD_NEW_NEVER_CALLED,
        
        /// <remarks/>
        ERR_SECURITY_NOT_SET,
        
        /// <remarks/>
        ERR_SECURITY_VIOLATION,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_IN_PORTFOLIO,
        
        /// <remarks/>
        ERR_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_NO_DELETE_PERMISSION,
        
        /// <remarks/>
        ERR_NO_EDIT_PERMISSION_ON_PARENT,
        
        /// <remarks/>
        ERR_NO_FURTHER_DETAILS_AVAILABLE,
        
        /// <remarks/>
        ERR_DUPLICATE_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_PHASE_ACTUAL_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_PHASE_PLANED_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_MORE_THAN_ONE_CURRENT_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_MENU_XML_DOES_NOT_CONFORM_TO_XSD,
        
        /// <remarks/>
        ERR_SETTINGS_DO_NOT_EXIST,
        
        /// <remarks/>
        ERR_SETTINGS_ALREADY_EXIST,
        
        /// <remarks/>
        ERR_OBJECT_IN_USE,
        
        /// <remarks/>
        ERR_EXCEEDED_AUTHORIZED_NUMBER_OF_USERS,
        
        /// <remarks/>
        ERR_PHASE_FRCST_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_SPECIFIC_EMAIL_ALERT_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_XML_EXPORT_TEMPLATE_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_VALIDATION_ERROR,
        
        /// <remarks/>
        ERR_VERSION_NAME_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_ATTACHMENT_UNKNOWN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosPortfolioIdentifier {
        
        private string nameField;
        
        private string uCIField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string UCI {
            get {
                return this.uCIField;
            }
            set {
                this.uCIField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosWFTemplateInfo {
        
        private string wFTemplateNameField;
        
        private string descriptionField;
        
        private bool isEnabledField;
        
        private string ownerField;
        
        private int ownerIDField;
        
        private psWF_PARTICIPANT_TYPE managerTypeField;
        
        private string managerField;
        
        private int managerIDField;
        
        private string managerRoleField;
        
        private psWF_ALTERNATE_MANAGERS_LIMITATION_TYPE alternateManagersLimitationField;
        
        private string alternateManagersGroupField;
        
        private string scopeNameField;
        
        private string scopeIDField;
        
        private string runAsUserField;
        
        private int runAsUserIDField;
        
        private bool canAccessAllDataField;
        
        public psPortfoliosWFTemplateInfo() {
            this.managerTypeField = psWF_PARTICIPANT_TYPE.NOT_SPECIFIED;
            this.alternateManagersLimitationField = psWF_ALTERNATE_MANAGERS_LIMITATION_TYPE.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string WFTemplateName {
            get {
                return this.wFTemplateNameField;
            }
            set {
                this.wFTemplateNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnabled {
            get {
                return this.isEnabledField;
            }
            set {
                this.isEnabledField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerID {
            get {
                return this.ownerIDField;
            }
            set {
                this.ownerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_PARTICIPANT_TYPE.NOT_SPECIFIED)]
        public psWF_PARTICIPANT_TYPE ManagerType {
            get {
                return this.managerTypeField;
            }
            set {
                this.managerTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ManagerRole {
            get {
                return this.managerRoleField;
            }
            set {
                this.managerRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_ALTERNATE_MANAGERS_LIMITATION_TYPE.NOT_SPECIFIED)]
        public psWF_ALTERNATE_MANAGERS_LIMITATION_TYPE AlternateManagersLimitation {
            get {
                return this.alternateManagersLimitationField;
            }
            set {
                this.alternateManagersLimitationField = value;
            }
        }
        
        /// <remarks/>
        public string AlternateManagersGroup {
            get {
                return this.alternateManagersGroupField;
            }
            set {
                this.alternateManagersGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeName {
            get {
                return this.scopeNameField;
            }
            set {
                this.scopeNameField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeID {
            get {
                return this.scopeIDField;
            }
            set {
                this.scopeIDField = value;
            }
        }
        
        /// <remarks/>
        public string RunAsUser {
            get {
                return this.runAsUserField;
            }
            set {
                this.runAsUserField = value;
            }
        }
        
        /// <remarks/>
        public int RunAsUserID {
            get {
                return this.runAsUserIDField;
            }
            set {
                this.runAsUserIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CanAccessAllData {
            get {
                return this.canAccessAllDataField;
            }
            set {
                this.canAccessAllDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psWF_PARTICIPANT_TYPE {
        
        /// <remarks/>
        WPT_NONE,
        
        /// <remarks/>
        WPT_USER,
        
        /// <remarks/>
        WPT_ROLE,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psWF_ALTERNATE_MANAGERS_LIMITATION_TYPE {
        
        /// <remarks/>
        WAMLT_NONE,
        
        /// <remarks/>
        WAMLT_NO_ALTERNATE_MANAGERS,
        
        /// <remarks/>
        WAMLT_UNLIMITED_ALTERNATE_MANAGERS,
        
        /// <remarks/>
        WAMLT_SPECIFIC_ALTERNATE_MANAGERS,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosWFChoiceInfo {
        
        private string choiceNameField;
        
        /// <remarks/>
        public string ChoiceName {
            get {
                return this.choiceNameField;
            }
            set {
                this.choiceNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosWFAssignmentInfo {
        
        private string wFTemplateNameField;
        
        private string wFStepNameField;
        
        private string wFTaskNameField;
        
        private string wFTaskDescriptionField;
        
        private string wFInstanceNameField;
        
        private int wFInstanceIDField;
        
        private psWF_TASK_INSTANCE_STATUS wFTaskInstanceStatusField;
        
        private int assignmentIDField;
        
        private psWF_TASK_ASSIGNMENT_TYPE assignmentTypeField;
        
        private psPortfoliosWFChoiceInfo[] possibleChoicesField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private string performerField;
        
        private int performerIDField;
        
        private string performedByField;
        
        private int performedByIDField;
        
        private string wFStepInstanceManagerField;
        
        private int wFStepInstanceManagerIDField;
        
        private string scopeNameField;
        
        private string scopeIDField;
        
        public psPortfoliosWFAssignmentInfo() {
            this.wFTaskInstanceStatusField = psWF_TASK_INSTANCE_STATUS.NOT_SPECIFIED;
            this.assignmentTypeField = psWF_TASK_ASSIGNMENT_TYPE.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string WFTemplateName {
            get {
                return this.wFTemplateNameField;
            }
            set {
                this.wFTemplateNameField = value;
            }
        }
        
        /// <remarks/>
        public string WFStepName {
            get {
                return this.wFStepNameField;
            }
            set {
                this.wFStepNameField = value;
            }
        }
        
        /// <remarks/>
        public string WFTaskName {
            get {
                return this.wFTaskNameField;
            }
            set {
                this.wFTaskNameField = value;
            }
        }
        
        /// <remarks/>
        public string WFTaskDescription {
            get {
                return this.wFTaskDescriptionField;
            }
            set {
                this.wFTaskDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string WFInstanceName {
            get {
                return this.wFInstanceNameField;
            }
            set {
                this.wFInstanceNameField = value;
            }
        }
        
        /// <remarks/>
        public int WFInstanceID {
            get {
                return this.wFInstanceIDField;
            }
            set {
                this.wFInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_TASK_INSTANCE_STATUS.NOT_SPECIFIED)]
        public psWF_TASK_INSTANCE_STATUS WFTaskInstanceStatus {
            get {
                return this.wFTaskInstanceStatusField;
            }
            set {
                this.wFTaskInstanceStatusField = value;
            }
        }
        
        /// <remarks/>
        public int AssignmentID {
            get {
                return this.assignmentIDField;
            }
            set {
                this.assignmentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_TASK_ASSIGNMENT_TYPE.NOT_SPECIFIED)]
        public psWF_TASK_ASSIGNMENT_TYPE AssignmentType {
            get {
                return this.assignmentTypeField;
            }
            set {
                this.assignmentTypeField = value;
            }
        }
        
        /// <remarks/>
        public psPortfoliosWFChoiceInfo[] PossibleChoices {
            get {
                return this.possibleChoicesField;
            }
            set {
                this.possibleChoicesField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Performer {
            get {
                return this.performerField;
            }
            set {
                this.performerField = value;
            }
        }
        
        /// <remarks/>
        public int PerformerID {
            get {
                return this.performerIDField;
            }
            set {
                this.performerIDField = value;
            }
        }
        
        /// <remarks/>
        public string PerformedBy {
            get {
                return this.performedByField;
            }
            set {
                this.performedByField = value;
            }
        }
        
        /// <remarks/>
        public int PerformedByID {
            get {
                return this.performedByIDField;
            }
            set {
                this.performedByIDField = value;
            }
        }
        
        /// <remarks/>
        public string WFStepInstanceManager {
            get {
                return this.wFStepInstanceManagerField;
            }
            set {
                this.wFStepInstanceManagerField = value;
            }
        }
        
        /// <remarks/>
        public int WFStepInstanceManagerID {
            get {
                return this.wFStepInstanceManagerIDField;
            }
            set {
                this.wFStepInstanceManagerIDField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeName {
            get {
                return this.scopeNameField;
            }
            set {
                this.scopeNameField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeID {
            get {
                return this.scopeIDField;
            }
            set {
                this.scopeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psWF_TASK_INSTANCE_STATUS {
        
        /// <remarks/>
        WFTIS_NONE,
        
        /// <remarks/>
        WFTIS_EXECUTING,
        
        /// <remarks/>
        WTSIS_FINISHED,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psWF_TASK_ASSIGNMENT_TYPE {
        
        /// <remarks/>
        WFTAT_NONE,
        
        /// <remarks/>
        WFTAT_REGULAR,
        
        /// <remarks/>
        WFTAT_REASSIGNED_DUE_TO_ERROR,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosWFInstanceInfo {
        
        private string wFInstanceNameField;
        
        private int wFInstanceIDField;
        
        private string wFTemplateNameField;
        
        private psWF_INSTANCE_STATUS wFInstanceStatusField;
        
        private string currStepNameField;
        
        private string currStepDescriptionField;
        
        private string currStepStartTimeField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private bool archivedField;
        
        private string managerField;
        
        private int managerIDField;
        
        private string startedByField;
        
        private int startedByIDField;
        
        private int parentWFInstanceIDField;
        
        private string runAsUserField;
        
        private int runAsUserIDField;
        
        private bool canAccessAllDataField;
        
        private string scopeNameField;
        
        private string scopeIDField;
        
        private string startedFromStepField;
        
        public psPortfoliosWFInstanceInfo() {
            this.wFInstanceStatusField = psWF_INSTANCE_STATUS.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string WFInstanceName {
            get {
                return this.wFInstanceNameField;
            }
            set {
                this.wFInstanceNameField = value;
            }
        }
        
        /// <remarks/>
        public int WFInstanceID {
            get {
                return this.wFInstanceIDField;
            }
            set {
                this.wFInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public string WFTemplateName {
            get {
                return this.wFTemplateNameField;
            }
            set {
                this.wFTemplateNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_INSTANCE_STATUS.NOT_SPECIFIED)]
        public psWF_INSTANCE_STATUS WFInstanceStatus {
            get {
                return this.wFInstanceStatusField;
            }
            set {
                this.wFInstanceStatusField = value;
            }
        }
        
        /// <remarks/>
        public string CurrStepName {
            get {
                return this.currStepNameField;
            }
            set {
                this.currStepNameField = value;
            }
        }
        
        /// <remarks/>
        public string CurrStepDescription {
            get {
                return this.currStepDescriptionField;
            }
            set {
                this.currStepDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string CurrStepStartTime {
            get {
                return this.currStepStartTimeField;
            }
            set {
                this.currStepStartTimeField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool Archived {
            get {
                return this.archivedField;
            }
            set {
                this.archivedField = value;
            }
        }
        
        /// <remarks/>
        public string Manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
        
        /// <remarks/>
        public string StartedBy {
            get {
                return this.startedByField;
            }
            set {
                this.startedByField = value;
            }
        }
        
        /// <remarks/>
        public int StartedByID {
            get {
                return this.startedByIDField;
            }
            set {
                this.startedByIDField = value;
            }
        }
        
        /// <remarks/>
        public int ParentWFInstanceID {
            get {
                return this.parentWFInstanceIDField;
            }
            set {
                this.parentWFInstanceIDField = value;
            }
        }
        
        /// <remarks/>
        public string RunAsUser {
            get {
                return this.runAsUserField;
            }
            set {
                this.runAsUserField = value;
            }
        }
        
        /// <remarks/>
        public int RunAsUserID {
            get {
                return this.runAsUserIDField;
            }
            set {
                this.runAsUserIDField = value;
            }
        }
        
        /// <remarks/>
        public bool CanAccessAllData {
            get {
                return this.canAccessAllDataField;
            }
            set {
                this.canAccessAllDataField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeName {
            get {
                return this.scopeNameField;
            }
            set {
                this.scopeNameField = value;
            }
        }
        
        /// <remarks/>
        public string ScopeID {
            get {
                return this.scopeIDField;
            }
            set {
                this.scopeIDField = value;
            }
        }
        
        /// <remarks/>
        public string StartedFromStep {
            get {
                return this.startedFromStepField;
            }
            set {
                this.startedFromStepField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public enum psWF_INSTANCE_STATUS {
        
        /// <remarks/>
        WFIS_NONE,
        
        /// <remarks/>
        WFIS_PENDING,
        
        /// <remarks/>
        WFIS_EXECUTING,
        
        /// <remarks/>
        WFIS_FINISHED,
        
        /// <remarks/>
        WFIS_STOPPED,
        
        /// <remarks/>
        WFIS_HALTED,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosWorkflow")]
    public partial class psPortfoliosWFParticipantInfo {
        
        private psWF_PARTICIPANT_TYPE participantTypeField;
        
        private string userLoginField;
        
        private int userIDField;
        
        private string roleCategoryNameField;
        
        public psPortfoliosWFParticipantInfo() {
            this.participantTypeField = psWF_PARTICIPANT_TYPE.NOT_SPECIFIED;
            this.userIDField = 0;
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psWF_PARTICIPANT_TYPE.NOT_SPECIFIED)]
        public psWF_PARTICIPANT_TYPE ParticipantType {
            get {
                return this.participantTypeField;
            }
            set {
                this.participantTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UserLogin {
            get {
                return this.userLoginField;
            }
            set {
                this.userLoginField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string RoleCategoryName {
            get {
                return this.roleCategoryNameField;
            }
            set {
                this.roleCategoryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DebugCompletedEventHandler(object sender, DebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psRETURN_VALUES Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psRETURN_VALUES)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void StartWorkflowCompletedEventHandler(object sender, StartWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StartWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void StopWFInstanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DeleteWFInstanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ArchiveWFInstanceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ListWFInstancesCompletedEventHandler(object sender, ListWFInstancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListWFInstancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListWFInstancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFInstanceInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFInstanceInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ListWFInstanceAssignmentsCompletedEventHandler(object sender, ListWFInstanceAssignmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListWFInstanceAssignmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListWFInstanceAssignmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFAssignmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ListWFAssignmentsByPerformerCompletedEventHandler(object sender, ListWFAssignmentsByPerformerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListWFAssignmentsByPerformerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListWFAssignmentsByPerformerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFAssignmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ListWFAssignmentsByManagerCompletedEventHandler(object sender, ListWFAssignmentsByManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListWFAssignmentsByManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListWFAssignmentsByManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFAssignmentInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFAssignmentInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetWFTemplateInfoCompletedEventHandler(object sender, GetWFTemplateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWFTemplateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWFTemplateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFTemplateInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFTemplateInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ListWFTemplatesCompletedEventHandler(object sender, ListWFTemplatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListWFTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListWFTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosWFTemplateInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosWFTemplateInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void SignoffWFAssignmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
