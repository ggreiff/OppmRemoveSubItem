//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace wsPortfoliosSubItem {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psPortfoliosSubItemSoap", Namespace="http://prosight.com/wsdl/5.0/psPortfoliosSubItem/")]
    public partial class psPortfoliosSubItem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncSubItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubItemListAsOfOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncSubItemsAsOfOperationCompleted;
        
        /// <remarks/>
        public psPortfoliosSubItem() {
            this.Url = "http://localhost/ProSightWs/psPortfoliosSubItem.asmx";
        }
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        public event GetSubItemListCompletedEventHandler GetSubItemListCompleted;
        
        /// <remarks/>
        public event SyncSubItemsCompletedEventHandler SyncSubItemsCompleted;
        
        /// <remarks/>
        public event GetSubItemListAsOfCompletedEventHandler GetSubItemListAsOfCompleted;
        
        /// <remarks/>
        public event SyncSubItemsAsOfCompletedEventHandler SyncSubItemsAsOfCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSubItem/Debug", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psRETURN_VALUES Debug() {
            object[] results = this.Invoke("Debug", new object[0]);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebug(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Debug", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public psRETURN_VALUES EndDebug(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public void DebugAsync() {
            this.DebugAsync(null);
        }
        
        /// <remarks/>
        public void DebugAsync(object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[0], this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new DebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSubItem/GetSubItemList", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosSubItemInfo[] GetSubItemList(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems) {
            object[] results = this.Invoke("GetSubItemList", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems});
            return ((psPortfoliosSubItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubItemList(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubItemList", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosSubItemInfo[] EndGetSubItemList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosSubItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubItemListAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems) {
            this.GetSubItemListAsync(sCommonIDCategory, sId, sSubItemType, lSubItemTypeID, arCategoryNames, bShowHiddenSubItems, null);
        }
        
        /// <remarks/>
        public void GetSubItemListAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, object userState) {
            if ((this.GetSubItemListOperationCompleted == null)) {
                this.GetSubItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubItemListOperationCompleted);
            }
            this.InvokeAsync("GetSubItemList", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems}, this.GetSubItemListOperationCompleted, userState);
        }
        
        private void OnGetSubItemListOperationCompleted(object arg) {
            if ((this.GetSubItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubItemListCompleted(this, new GetSubItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSubItem/SyncSubItems", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosSubItemUpdateStatus[] SyncSubItems(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, bool stopOnAnyError) {
            object[] results = this.Invoke("SyncSubItems", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        stopOnAnyError});
            return ((psPortfoliosSubItemUpdateStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSyncSubItems(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, bool stopOnAnyError, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SyncSubItems", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        stopOnAnyError}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosSubItemUpdateStatus[] EndSyncSubItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosSubItemUpdateStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SyncSubItemsAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, bool stopOnAnyError) {
            this.SyncSubItemsAsync(sCommonIDCategory, sId, sSubItemType, lSubItemTypeID, arSubItemList, stopOnAnyError, null);
        }
        
        /// <remarks/>
        public void SyncSubItemsAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, bool stopOnAnyError, object userState) {
            if ((this.SyncSubItemsOperationCompleted == null)) {
                this.SyncSubItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncSubItemsOperationCompleted);
            }
            this.InvokeAsync("SyncSubItems", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        stopOnAnyError}, this.SyncSubItemsOperationCompleted, userState);
        }
        
        private void OnSyncSubItemsOperationCompleted(object arg) {
            if ((this.SyncSubItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncSubItemsCompleted(this, new SyncSubItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSubItem/GetSubItemListAsOf", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosSubItemInfo[] GetSubItemListAsOf(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, string sAsOf) {
            object[] results = this.Invoke("GetSubItemListAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems,
                        sAsOf});
            return ((psPortfoliosSubItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSubItemListAsOf(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, string sAsOf, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSubItemListAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems,
                        sAsOf}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosSubItemInfo[] EndGetSubItemListAsOf(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosSubItemInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubItemListAsOfAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, string sAsOf) {
            this.GetSubItemListAsOfAsync(sCommonIDCategory, sId, sSubItemType, lSubItemTypeID, arCategoryNames, bShowHiddenSubItems, sAsOf, null);
        }
        
        /// <remarks/>
        public void GetSubItemListAsOfAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, string[] arCategoryNames, bool bShowHiddenSubItems, string sAsOf, object userState) {
            if ((this.GetSubItemListAsOfOperationCompleted == null)) {
                this.GetSubItemListAsOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubItemListAsOfOperationCompleted);
            }
            this.InvokeAsync("GetSubItemListAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arCategoryNames,
                        bShowHiddenSubItems,
                        sAsOf}, this.GetSubItemListAsOfOperationCompleted, userState);
        }
        
        private void OnGetSubItemListAsOfOperationCompleted(object arg) {
            if ((this.GetSubItemListAsOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubItemListAsOfCompleted(this, new GetSubItemListAsOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSubItem/SyncSubItemsAsOf", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psPortfoliosSubItemUpdateStatus[] SyncSubItemsAsOf(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, string sAsOf, bool stopOnAnyError) {
            object[] results = this.Invoke("SyncSubItemsAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        sAsOf,
                        stopOnAnyError});
            return ((psPortfoliosSubItemUpdateStatus[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSyncSubItemsAsOf(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, string sAsOf, bool stopOnAnyError, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SyncSubItemsAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        sAsOf,
                        stopOnAnyError}, callback, asyncState);
        }
        
        /// <remarks/>
        public psPortfoliosSubItemUpdateStatus[] EndSyncSubItemsAsOf(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psPortfoliosSubItemUpdateStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void SyncSubItemsAsOfAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, string sAsOf, bool stopOnAnyError) {
            this.SyncSubItemsAsOfAsync(sCommonIDCategory, sId, sSubItemType, lSubItemTypeID, arSubItemList, sAsOf, stopOnAnyError, null);
        }
        
        /// <remarks/>
        public void SyncSubItemsAsOfAsync(string sCommonIDCategory, string sId, string sSubItemType, int lSubItemTypeID, psPortfoliosSubItemInfo[] arSubItemList, string sAsOf, bool stopOnAnyError, object userState) {
            if ((this.SyncSubItemsAsOfOperationCompleted == null)) {
                this.SyncSubItemsAsOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncSubItemsAsOfOperationCompleted);
            }
            this.InvokeAsync("SyncSubItemsAsOf", new object[] {
                        sCommonIDCategory,
                        sId,
                        sSubItemType,
                        lSubItemTypeID,
                        arSubItemList,
                        sAsOf,
                        stopOnAnyError}, this.SyncSubItemsAsOfOperationCompleted, userState);
        }
        
        private void OnSyncSubItemsAsOfOperationCompleted(object arg) {
            if ((this.SyncSubItemsAsOfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncSubItemsAsOfCompleted(this, new SyncSubItemsAsOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public enum psRETURN_VALUES {
        
        /// <remarks/>
        ERR_OK,
        
        /// <remarks/>
        ERR_INTERNAL,
        
        /// <remarks/>
        ERR_COMMON_ID_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_COMMON_ID_UNKNOWN,
        
        /// <remarks/>
        ERR_MULTIPLE_COMMON_ID,
        
        /// <remarks/>
        ERR_NOT_ITEM,
        
        /// <remarks/>
        ERR_NO_NAME_GIVEN,
        
        /// <remarks/>
        ERR_PORTFOLIO_UNKNOWN,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_QBP,
        
        /// <remarks/>
        ERR_NAME_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_NOT_PORTFOLIO,
        
        /// <remarks/>
        ERR_PORTFOLIO_TYPE_MISMATCH,
        
        /// <remarks/>
        ERR_PHASE_NOT_FOUND,
        
        /// <remarks/>
        ERR_NO_SUCH_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_NO_COMMON_ID,
        
        /// <remarks/>
        ERR_ILLEGAL_STATUS,
        
        /// <remarks/>
        ERR_ILLEGAL_PORTFOLIO_TYPE,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_NOT_FOUND,
        
        /// <remarks/>
        ERR_ILLEGAL_GUID,
        
        /// <remarks/>
        ERR_NO_PHASES_FOR_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_ILLEGAL_DATE,
        
        /// <remarks/>
        ERR_ILLEGAL_DESCRIPTION,
        
        /// <remarks/>
        ERR_ITEM_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_NO_VALUE_LIST_NAME,
        
        /// <remarks/>
        ERR_VALUE_LIST_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_CANNOT_UPDATE_SYSTEM_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_TEXT_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_ID_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_VALUE_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_VALUE_ID_NOT_INTEGER,
        
        /// <remarks/>
        ERR_ILLEGAL_NAME,
        
        /// <remarks/>
        ERR_CATEGORY_NOT_SUPPORTED,
        
        /// <remarks/>
        ERR_CATEGORY_UNKNOWN,
        
        /// <remarks/>
        ERR_ILLEGAL_OPERATOR,
        
        /// <remarks/>
        ERR_VALUE_NOT_INTEGER,
        
        /// <remarks/>
        ERR_VALUE_NOT_NUMERIC,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_IN_SCOPE,
        
        /// <remarks/>
        ERR_ILLEGAL_INDICATOR,
        
        /// <remarks/>
        ERR_BAD_PARAMETER,
        
        /// <remarks/>
        ERR_ILLEGAL_DEPENDENCY,
        
        /// <remarks/>
        ERR_ADD_NEW_NEVER_CALLED,
        
        /// <remarks/>
        ERR_SECURITY_NOT_SET,
        
        /// <remarks/>
        ERR_SECURITY_VIOLATION,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_IN_PORTFOLIO,
        
        /// <remarks/>
        ERR_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_NO_DELETE_PERMISSION,
        
        /// <remarks/>
        ERR_NO_EDIT_PERMISSION_ON_PARENT,
        
        /// <remarks/>
        ERR_NO_FURTHER_DETAILS_AVAILABLE,
        
        /// <remarks/>
        ERR_DUPLICATE_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_PHASE_ACTUAL_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_PHASE_PLANED_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_MORE_THAN_ONE_CURRENT_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_MENU_XML_DOES_NOT_CONFORM_TO_XSD,
        
        /// <remarks/>
        ERR_SETTINGS_DO_NOT_EXIST,
        
        /// <remarks/>
        ERR_SETTINGS_ALREADY_EXIST,
        
        /// <remarks/>
        ERR_OBJECT_IN_USE,
        
        /// <remarks/>
        ERR_EXCEEDED_AUTHORIZED_NUMBER_OF_USERS,
        
        /// <remarks/>
        ERR_PHASE_FRCST_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_SPECIFIC_EMAIL_ALERT_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_XML_EXPORT_TEMPLATE_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_VALIDATION_ERROR,
        
        /// <remarks/>
        ERR_VERSION_NAME_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_ATTACHMENT_UNKNOWN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public partial class psPortfoliosSubItemInfo {
        
        private string subItemTypeField;
        
        private int subItemTypeIDField;
        
        private string subItemNameField;
        
        private int subItemProSightIDField;
        
        private string subItemUCIField;
        
        private int subItemSerialField;
        
        private psPortfoliosCellInfo[] categoryValuesField;
        
        private bool subItemIsHiddenField;
        
        private string subItemCreationDateField;
        
        private string subItemRemovalDateField;
        
        public psPortfoliosSubItemInfo() {
            this.subItemProSightIDField = -2;
        }
        
        /// <remarks/>
        public string SubItemType {
            get {
                return this.subItemTypeField;
            }
            set {
                this.subItemTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SubItemTypeID {
            get {
                return this.subItemTypeIDField;
            }
            set {
                this.subItemTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string SubItemName {
            get {
                return this.subItemNameField;
            }
            set {
                this.subItemNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int SubItemProSightID {
            get {
                return this.subItemProSightIDField;
            }
            set {
                this.subItemProSightIDField = value;
            }
        }
        
        /// <remarks/>
        public string SubItemUCI {
            get {
                return this.subItemUCIField;
            }
            set {
                this.subItemUCIField = value;
            }
        }
        
        /// <remarks/>
        public int SubItemSerial {
            get {
                return this.subItemSerialField;
            }
            set {
                this.subItemSerialField = value;
            }
        }
        
        /// <remarks/>
        public psPortfoliosCellInfo[] CategoryValues {
            get {
                return this.categoryValuesField;
            }
            set {
                this.categoryValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool SubItemIsHidden {
            get {
                return this.subItemIsHiddenField;
            }
            set {
                this.subItemIsHiddenField = value;
            }
        }
        
        /// <remarks/>
        public string SubItemCreationDate {
            get {
                return this.subItemCreationDateField;
            }
            set {
                this.subItemCreationDateField = value;
            }
        }
        
        /// <remarks/>
        public string SubItemRemovalDate {
            get {
                return this.subItemRemovalDateField;
            }
            set {
                this.subItemRemovalDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public partial class psPortfoliosCellInfo {
        
        private string categoryNameField;
        
        private string cellValueField;
        
        private string cellAsOfField;
        
        private string cellDisplayValueField;
        
        private psINDICATOR cellIndicatorField;
        
        private string cellAnnotationField;
        
        private string portfolioIdField;
        
        private bool securityDeniedField;
        
        private string updatedByField;
        
        private string cellIndicatorNameField;
        
        private int cellIndicatorIDField;
        
        public psPortfoliosCellInfo() {
            this.cellIndicatorField = psINDICATOR.NOT_SPECIFIED;
            this.cellIndicatorIDField = -2;
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CellValue {
            get {
                return this.cellValueField;
            }
            set {
                this.cellValueField = value;
            }
        }
        
        /// <remarks/>
        public string CellAsOf {
            get {
                return this.cellAsOfField;
            }
            set {
                this.cellAsOfField = value;
            }
        }
        
        /// <remarks/>
        public string CellDisplayValue {
            get {
                return this.cellDisplayValueField;
            }
            set {
                this.cellDisplayValueField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psINDICATOR.NOT_SPECIFIED)]
        public psINDICATOR CellIndicator {
            get {
                return this.cellIndicatorField;
            }
            set {
                this.cellIndicatorField = value;
            }
        }
        
        /// <remarks/>
        public string CellAnnotation {
            get {
                return this.cellAnnotationField;
            }
            set {
                this.cellAnnotationField = value;
            }
        }
        
        /// <remarks/>
        public string PortfolioId {
            get {
                return this.portfolioIdField;
            }
            set {
                this.portfolioIdField = value;
            }
        }
        
        /// <remarks/>
        public bool SecurityDenied {
            get {
                return this.securityDeniedField;
            }
            set {
                this.securityDeniedField = value;
            }
        }
        
        /// <remarks/>
        public string UpdatedBy {
            get {
                return this.updatedByField;
            }
            set {
                this.updatedByField = value;
            }
        }
        
        /// <remarks/>
        public string CellIndicatorName {
            get {
                return this.cellIndicatorNameField;
            }
            set {
                this.cellIndicatorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int CellIndicatorID {
            get {
                return this.cellIndicatorIDField;
            }
            set {
                this.cellIndicatorIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public enum psINDICATOR {
        
        /// <remarks/>
        IND_NONE,
        
        /// <remarks/>
        IND_RED,
        
        /// <remarks/>
        IND_YELLOW,
        
        /// <remarks/>
        IND_GREEN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public partial class psPortfoliosCellUpdateStatus {
        
        private string categoryNameField;
        
        private string cellAsOfField;
        
        private bool securityDeniedField;
        
        private psRETURN_VALUES errorCodeField;
        
        private string errorTextField;
        
        public psPortfoliosCellUpdateStatus() {
            this.errorCodeField = psRETURN_VALUES.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string CategoryName {
            get {
                return this.categoryNameField;
            }
            set {
                this.categoryNameField = value;
            }
        }
        
        /// <remarks/>
        public string CellAsOf {
            get {
                return this.cellAsOfField;
            }
            set {
                this.cellAsOfField = value;
            }
        }
        
        /// <remarks/>
        public bool SecurityDenied {
            get {
                return this.securityDeniedField;
            }
            set {
                this.securityDeniedField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psRETURN_VALUES.NOT_SPECIFIED)]
        public psRETURN_VALUES ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosSubItem")]
    public partial class psPortfoliosSubItemUpdateStatus {
        
        private string subItemNameField;
        
        private int subItemProSightIDField;
        
        private string subItemUCIField;
        
        private int subItemSerialField;
        
        private psRETURN_VALUES errorCodeField;
        
        private string errorTextField;
        
        private psPortfoliosCellUpdateStatus[] cellsUpdateStatusField;
        
        public psPortfoliosSubItemUpdateStatus() {
            this.subItemProSightIDField = -2;
            this.errorCodeField = psRETURN_VALUES.NOT_SPECIFIED;
        }
        
        /// <remarks/>
        public string SubItemName {
            get {
                return this.subItemNameField;
            }
            set {
                this.subItemNameField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(-2)]
        public int SubItemProSightID {
            get {
                return this.subItemProSightIDField;
            }
            set {
                this.subItemProSightIDField = value;
            }
        }
        
        /// <remarks/>
        public string SubItemUCI {
            get {
                return this.subItemUCIField;
            }
            set {
                this.subItemUCIField = value;
            }
        }
        
        /// <remarks/>
        public int SubItemSerial {
            get {
                return this.subItemSerialField;
            }
            set {
                this.subItemSerialField = value;
            }
        }
        
        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(psRETURN_VALUES.NOT_SPECIFIED)]
        public psRETURN_VALUES ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
            }
        }
        
        /// <remarks/>
        public psPortfoliosCellUpdateStatus[] CellsUpdateStatus {
            get {
                return this.cellsUpdateStatusField;
            }
            set {
                this.cellsUpdateStatusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DebugCompletedEventHandler(object sender, DebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psRETURN_VALUES Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psRETURN_VALUES)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetSubItemListCompletedEventHandler(object sender, GetSubItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosSubItemInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosSubItemInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void SyncSubItemsCompletedEventHandler(object sender, SyncSubItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncSubItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncSubItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosSubItemUpdateStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosSubItemUpdateStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void GetSubItemListAsOfCompletedEventHandler(object sender, GetSubItemListAsOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubItemListAsOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubItemListAsOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosSubItemInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosSubItemInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void SyncSubItemsAsOfCompletedEventHandler(object sender, SyncSubItemsAsOfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncSubItemsAsOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncSubItemsAsOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psPortfoliosSubItemUpdateStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psPortfoliosSubItemUpdateStatus[])(this.results[0]));
            }
        }
    }
}
