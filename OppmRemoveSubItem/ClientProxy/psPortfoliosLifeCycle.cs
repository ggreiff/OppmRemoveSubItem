//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace wsPortfoliosLifeCycle {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psPortfoliosLifeCycleSoap", Namespace="http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/")]
    public partial class psPortfoliosLifeCycle : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewExOperationCompleted;
        
        private System.Threading.SendOrPostCallback SynchronizeExOperationCompleted;
        
        /// <remarks/>
        public psPortfoliosLifeCycle() {
            this.Url = "http://localhost/ProSightWs/psPortfoliosLifeCycle.asmx";
        }
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        public event UpdateCompletedEventHandler UpdateCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        public event AddNewExCompletedEventHandler AddNewExCompleted;
        
        /// <remarks/>
        public event SynchronizeExCompletedEventHandler SynchronizeExCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/Debug", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public psRETURN_VALUES Debug() {
            object[] results = this.Invoke("Debug", new object[0]);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebug(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Debug", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public psRETURN_VALUES EndDebug(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((psRETURN_VALUES)(results[0]));
        }
        
        /// <remarks/>
        public void DebugAsync() {
            this.DebugAsync(null);
        }
        
        /// <remarks/>
        public void DebugAsync(object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[0], this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new DebugCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/Update", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update(string sName, string sDescription, string[] arPhaseNames, int lUpdateFlags) {
            this.Invoke("Update", new object[] {
                        sName,
                        sDescription,
                        arPhaseNames,
                        lUpdateFlags});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdate(string sName, string sDescription, string[] arPhaseNames, int lUpdateFlags, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Update", new object[] {
                        sName,
                        sDescription,
                        arPhaseNames,
                        lUpdateFlags}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateAsync(string sName, string sDescription, string[] arPhaseNames, int lUpdateFlags) {
            this.UpdateAsync(sName, sDescription, arPhaseNames, lUpdateFlags, null);
        }
        
        /// <remarks/>
        public void UpdateAsync(string sName, string sDescription, string[] arPhaseNames, int lUpdateFlags, object userState) {
            if ((this.UpdateOperationCompleted == null)) {
                this.UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOperationCompleted);
            }
            this.InvokeAsync("Update", new object[] {
                        sName,
                        sDescription,
                        arPhaseNames,
                        lUpdateFlags}, this.UpdateOperationCompleted, userState);
        }
        
        private void OnUpdateOperationCompleted(object arg) {
            if ((this.UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/Delete", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(string sName) {
            this.Invoke("Delete", new object[] {
                        sName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDelete(string sName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Delete", new object[] {
                        sName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDelete(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteAsync(string sName) {
            this.DeleteAsync(sName, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string sName, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        sName}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/AddNewEx", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddNewEx(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName) {
            this.Invoke("AddNewEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddNewEx(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddNewEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndAddNewEx(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void AddNewExAsync(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName) {
            this.AddNewExAsync(sName, sDescription, sGUID, arPhaseNames, sContainerName, null);
        }
        
        /// <remarks/>
        public void AddNewExAsync(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName, object userState) {
            if ((this.AddNewExOperationCompleted == null)) {
                this.AddNewExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewExOperationCompleted);
            }
            this.InvokeAsync("AddNewEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName}, this.AddNewExOperationCompleted, userState);
        }
        
        private void OnAddNewExOperationCompleted(object arg) {
            if ((this.AddNewExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosLifeCycle/SynchronizeEx", RequestNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", ResponseNamespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SynchronizeEx(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName) {
            this.Invoke("SynchronizeEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSynchronizeEx(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SynchronizeEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSynchronizeEx(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SynchronizeExAsync(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName) {
            this.SynchronizeExAsync(sName, sDescription, sGUID, arPhaseNames, sContainerName, null);
        }
        
        /// <remarks/>
        public void SynchronizeExAsync(string sName, string sDescription, string sGUID, string[] arPhaseNames, string sContainerName, object userState) {
            if ((this.SynchronizeExOperationCompleted == null)) {
                this.SynchronizeExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSynchronizeExOperationCompleted);
            }
            this.InvokeAsync("SynchronizeEx", new object[] {
                        sName,
                        sDescription,
                        sGUID,
                        arPhaseNames,
                        sContainerName}, this.SynchronizeExOperationCompleted, userState);
        }
        
        private void OnSynchronizeExOperationCompleted(object arg) {
            if ((this.SynchronizeExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SynchronizeExCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://prosight.com/type/Portfolios/5.0/psPortfoliosLifeCycle")]
    public enum psRETURN_VALUES {
        
        /// <remarks/>
        ERR_OK,
        
        /// <remarks/>
        ERR_INTERNAL,
        
        /// <remarks/>
        ERR_COMMON_ID_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_COMMON_ID_UNKNOWN,
        
        /// <remarks/>
        ERR_MULTIPLE_COMMON_ID,
        
        /// <remarks/>
        ERR_NOT_ITEM,
        
        /// <remarks/>
        ERR_NO_NAME_GIVEN,
        
        /// <remarks/>
        ERR_PORTFOLIO_UNKNOWN,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_QBP,
        
        /// <remarks/>
        ERR_NAME_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_NOT_PORTFOLIO,
        
        /// <remarks/>
        ERR_PORTFOLIO_TYPE_MISMATCH,
        
        /// <remarks/>
        ERR_PHASE_NOT_FOUND,
        
        /// <remarks/>
        ERR_NO_SUCH_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_NO_COMMON_ID,
        
        /// <remarks/>
        ERR_ILLEGAL_STATUS,
        
        /// <remarks/>
        ERR_ILLEGAL_PORTFOLIO_TYPE,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_NOT_FOUND,
        
        /// <remarks/>
        ERR_ILLEGAL_GUID,
        
        /// <remarks/>
        ERR_NO_PHASES_FOR_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_ILLEGAL_DATE,
        
        /// <remarks/>
        ERR_ILLEGAL_DESCRIPTION,
        
        /// <remarks/>
        ERR_ITEM_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_NO_VALUE_LIST_NAME,
        
        /// <remarks/>
        ERR_VALUE_LIST_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_CANNOT_UPDATE_SYSTEM_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_TEXT_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_DUPLICATE_ID_IN_VALUE_LIST,
        
        /// <remarks/>
        ERR_VALUE_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_VALUE_ID_NOT_INTEGER,
        
        /// <remarks/>
        ERR_ILLEGAL_NAME,
        
        /// <remarks/>
        ERR_CATEGORY_NOT_SUPPORTED,
        
        /// <remarks/>
        ERR_CATEGORY_UNKNOWN,
        
        /// <remarks/>
        ERR_ILLEGAL_OPERATOR,
        
        /// <remarks/>
        ERR_VALUE_NOT_INTEGER,
        
        /// <remarks/>
        ERR_VALUE_NOT_NUMERIC,
        
        /// <remarks/>
        ERR_PORTFOLIO_NOT_IN_SCOPE,
        
        /// <remarks/>
        ERR_ILLEGAL_INDICATOR,
        
        /// <remarks/>
        ERR_BAD_PARAMETER,
        
        /// <remarks/>
        ERR_ILLEGAL_DEPENDENCY,
        
        /// <remarks/>
        ERR_ADD_NEW_NEVER_CALLED,
        
        /// <remarks/>
        ERR_SECURITY_NOT_SET,
        
        /// <remarks/>
        ERR_SECURITY_VIOLATION,
        
        /// <remarks/>
        ERR_LIFE_CYCLE_IN_PORTFOLIO,
        
        /// <remarks/>
        ERR_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_NO_DELETE_PERMISSION,
        
        /// <remarks/>
        ERR_NO_EDIT_PERMISSION_ON_PARENT,
        
        /// <remarks/>
        ERR_NO_FURTHER_DETAILS_AVAILABLE,
        
        /// <remarks/>
        ERR_DUPLICATE_PHASE_IN_LIFE_CYCLE,
        
        /// <remarks/>
        ERR_PHASE_ACTUAL_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_PHASE_PLANED_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_MORE_THAN_ONE_CURRENT_PHASE_FOR_ITEM,
        
        /// <remarks/>
        ERR_MENU_XML_DOES_NOT_CONFORM_TO_XSD,
        
        /// <remarks/>
        ERR_SETTINGS_DO_NOT_EXIST,
        
        /// <remarks/>
        ERR_SETTINGS_ALREADY_EXIST,
        
        /// <remarks/>
        ERR_OBJECT_IN_USE,
        
        /// <remarks/>
        ERR_EXCEEDED_AUTHORIZED_NUMBER_OF_USERS,
        
        /// <remarks/>
        ERR_PHASE_FRCST_START_DATE_LATER_THAN_END_DATE,
        
        /// <remarks/>
        ERR_SPECIFIC_EMAIL_ALERT_ALREADY_EXISTS,
        
        /// <remarks/>
        ERR_XML_EXPORT_TEMPLATE_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_ERROR,
        
        /// <remarks/>
        ERR_XML_EXPORT_VALIDATION_ERROR,
        
        /// <remarks/>
        ERR_VERSION_NAME_DOES_NOT_EXIST,
        
        /// <remarks/>
        ERR_ATTACHMENT_UNKNOWN,
        
        /// <remarks/>
        NOT_SPECIFIED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DebugCompletedEventHandler(object sender, DebugCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DebugCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DebugCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public psRETURN_VALUES Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((psRETURN_VALUES)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void UpdateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void AddNewExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void SynchronizeExCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
