//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.18020.
// 
namespace wsPortfoliosSecurity {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="psPortfoliosSecuritySoap", Namespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/")]
    public partial class psPortfoliosSecurity : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback DebugOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseSecurityTokenOperationCompleted;
        
        /// <remarks/>
        public psPortfoliosSecurity() {
            this.Url = "http://localhost/ProSightWs/psPortfoliosSecurity.asmx";
        }
        
        /// <remarks/>
        public event DebugCompletedEventHandler DebugCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event ReleaseSecurityTokenCompletedEventHandler ReleaseSecurityTokenCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSecurity/Debug", RequestNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", ResponseNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Debug() {
            this.Invoke("Debug", new object[0]);
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDebug(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Debug", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDebug(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DebugAsync() {
            this.DebugAsync(null);
        }
        
        /// <remarks/>
        public void DebugAsync(object userState) {
            if ((this.DebugOperationCompleted == null)) {
                this.DebugOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDebugOperationCompleted);
            }
            this.InvokeAsync("Debug", new object[0], this.DebugOperationCompleted, userState);
        }
        
        private void OnDebugOperationCompleted(object arg) {
            if ((this.DebugCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DebugCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSecurity/Login", RequestNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", ResponseNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Login(string sUser, string sPassword, int lTimeOut) {
            this.Invoke("Login", new object[] {
                        sUser,
                        sPassword,
                        lTimeOut});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string sUser, string sPassword, int lTimeOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        sUser,
                        sPassword,
                        lTimeOut}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndLogin(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void LoginAsync(string sUser, string sPassword, int lTimeOut) {
            this.LoginAsync(sUser, sPassword, lTimeOut, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string sUser, string sPassword, int lTimeOut, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        sUser,
                        sPassword,
                        lTimeOut}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://prosight.com/wsdl/5.0/psPortfoliosSecurity/ReleaseSecurityToken", RequestNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", ResponseNamespace="http://prosight.com/wsdl/5.0/psPortfoliosSecurity/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReleaseSecurityToken(string sSecurityToken) {
            this.Invoke("ReleaseSecurityToken", new object[] {
                        sSecurityToken});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReleaseSecurityToken(string sSecurityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReleaseSecurityToken", new object[] {
                        sSecurityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndReleaseSecurityToken(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void ReleaseSecurityTokenAsync(string sSecurityToken) {
            this.ReleaseSecurityTokenAsync(sSecurityToken, null);
        }
        
        /// <remarks/>
        public void ReleaseSecurityTokenAsync(string sSecurityToken, object userState) {
            if ((this.ReleaseSecurityTokenOperationCompleted == null)) {
                this.ReleaseSecurityTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseSecurityTokenOperationCompleted);
            }
            this.InvokeAsync("ReleaseSecurityToken", new object[] {
                        sSecurityToken}, this.ReleaseSecurityTokenOperationCompleted, userState);
        }
        
        private void OnReleaseSecurityTokenOperationCompleted(object arg) {
            if ((this.ReleaseSecurityTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseSecurityTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void DebugCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void LoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.18020")]
    public delegate void ReleaseSecurityTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
